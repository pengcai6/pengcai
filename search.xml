<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>11盛最多水的容器</title>
    <url>/2025/01/16/11%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</url>
    <content><![CDATA[<h1 id="11盛最多水的容器"><a href="#11盛最多水的容器" class="headerlink" title="11盛最多水的容器"></a>11盛最多水的容器</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">maxArea</span><span class="params">(<span class="type">int</span>[] height)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>, r = height.length-<span class="number">1</span>;l&lt;r; ) &#123;</span><br><span class="line">            <span class="comment">//移动右边的面积比移动左边的面积大，那么就移动右边的否则移动左边</span></span><br><span class="line">            <span class="comment">//计算面积</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">are</span> <span class="operator">=</span> Math.min(height[l], height[r]) * (r - l);</span><br><span class="line">            res = Math.max(are, res);</span><br><span class="line">            <span class="keyword">if</span> (height[l] &lt; height[r]) &#123;</span><br><span class="line">               l++;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                r--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>算法 双指针</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>12/4</title>
    <url>/2023/12/04/12-4/</url>
    <content><![CDATA[<h2 id="完成hexo基础搭建"><a href="#完成hexo基础搭建" class="headerlink" title="完成hexo基础搭建"></a>完成hexo基础搭建</h2><p>  <em><strong>1.全局音乐播放器搭建完毕<br>  2.living-2d搭建完毕<br>  3.本地端后台搭建完毕</strong></em></p>
]]></content>
  </entry>
  <entry>
    <title>15三数之和</title>
    <url>/2025/01/16/15%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ID15</span>三数之和 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">threeSum</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="comment">//        for (int i = 0; i &lt; nums.length; i++) &#123;</span></span><br><span class="line"><span class="comment">//            for (int j = i+1; j &lt; nums.length; j++) &#123;</span></span><br><span class="line"><span class="comment">//                for (int k = j+1; k &lt; nums.length; k++) &#123;</span></span><br><span class="line"><span class="comment">//                    if(nums[i] + nums[j] + nums[k] == 0)&#123;</span></span><br><span class="line"><span class="comment">//                        res.add(Arrays.asList(nums[i] , nums[j] , nums[k]));</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length-<span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;nums[i]==nums[i-<span class="number">1</span>])<span class="keyword">continue</span>;</span><br><span class="line">            <span class="type">int</span> l=i+<span class="number">1</span>;</span><br><span class="line">            <span class="type">int</span> r=nums.length-<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;r)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> nums[i] + nums[l] + nums[r];</span><br><span class="line">                <span class="keyword">if</span>(sum==<span class="number">0</span>) &#123;</span><br><span class="line">                    res.add(Arrays.asList(nums[i], nums[l], nums[r]));</span><br><span class="line">                    <span class="comment">// 去重l和r</span></span><br><span class="line">                    <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[l] == nums[l + <span class="number">1</span>]) l++;</span><br><span class="line">                    <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[r] == nums[r - <span class="number">1</span>]) r--;</span><br><span class="line">                    l++;</span><br><span class="line">                    r--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (sum&lt;<span class="number">0</span>) l++;</span><br><span class="line">                <span class="keyword">else</span> r--;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; lists = threeSum(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span></span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(<span class="string">&quot;lists = &quot;</span> + lists);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>146. LRU 缓存</title>
    <url>/2025/01/18/146-LRU-%E7%BC%93%E5%AD%98/</url>
    <content><![CDATA[<h1 id="146-LRU-缓存"><a href="#146-LRU-缓存" class="headerlink" title="146. LRU 缓存"></a>146. LRU 缓存</h1><p><a href="https://leetcode.cn/problems/lru-cache/">146. LRU 缓存</a></p>
<h2 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> leetcode.editor.cn.mycode.ID146;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手写双向链表加哈希表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LRUCache1</span> &#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">node</span>&#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> val,key;</span><br><span class="line">            <span class="keyword">public</span> node prev,next;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> <span class="title function_">node</span><span class="params">(<span class="type">int</span> key, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.key = key;</span><br><span class="line">                <span class="built_in">this</span>.val = val;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">doubleList</span>&#123;</span><br><span class="line">            <span class="keyword">public</span> node tail;</span><br><span class="line">            <span class="keyword">public</span> node head;</span><br><span class="line">            <span class="keyword">private</span> <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> <span class="title function_">doubleList</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.size=<span class="number">0</span>;</span><br><span class="line">                head=<span class="keyword">new</span> <span class="title class_">node</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">                tail=<span class="keyword">new</span> <span class="title class_">node</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">                head.next=tail;</span><br><span class="line">                tail.prev=head;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 在尾部插入</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> x</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addList</span><span class="params">(node x)</span></span><br><span class="line">            &#123;</span><br><span class="line">                x.prev=tail.prev;</span><br><span class="line">                x.next=tail;</span><br><span class="line">                tail.prev.next=x;</span><br><span class="line">                tail.prev=x;</span><br><span class="line">                size++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 一定存在</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> x</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">(node x)</span>&#123;</span><br><span class="line">            x.prev.next=x.next;</span><br><span class="line">            x.next.prev=x.prev;</span><br><span class="line">            size--;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> node <span class="title function_">removeFirst</span><span class="params">()</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(head.next==tail)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">node</span> <span class="variable">first</span> <span class="operator">=</span> head.next;</span><br><span class="line">                remove(first);</span><br><span class="line">                <span class="keyword">return</span> first;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> size;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    HashMap&lt;Integer,node&gt; map;</span><br><span class="line">    doubleList cache;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cap;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LRUCache1</span><span class="params">(<span class="type">int</span> capacity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cap=capacity;</span><br><span class="line">        <span class="built_in">this</span>.map =<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.cache=<span class="keyword">new</span> <span class="title class_">doubleList</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">makeRecently</span><span class="params">(<span class="type">int</span> key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">node</span> <span class="variable">node</span> <span class="operator">=</span> map.get(key);</span><br><span class="line">        cache.remove(node);</span><br><span class="line">        cache.addList(node);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addRecently</span><span class="params">(<span class="type">int</span> key ,<span class="type">int</span> value)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">node</span> <span class="variable">node</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">node</span>(key, value);</span><br><span class="line">        cache.addList(node);</span><br><span class="line">        map.put(key,node);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">deleteKey</span><span class="params">(<span class="type">int</span> key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">node</span> <span class="variable">node</span> <span class="operator">=</span> map.get(key);</span><br><span class="line">        cache.remove(node);</span><br><span class="line">        map.remove(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">removeLeastRecently</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">node</span> <span class="variable">node</span> <span class="operator">=</span> cache.removeFirst();</span><br><span class="line">        map.remove(node.key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">get</span><span class="params">(<span class="type">int</span> key)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(!map.containsKey(key))</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        makeRecently(key);</span><br><span class="line">        <span class="keyword">return</span> map.get(key).val;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(<span class="type">int</span> key, <span class="type">int</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(map.containsKey(key))</span><br><span class="line">        &#123;</span><br><span class="line">            deleteKey(key);</span><br><span class="line">            addRecently(key,value);</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cap==cache.size)&#123;</span><br><span class="line">            removeLeastRecently();</span><br><span class="line">        &#125;</span><br><span class="line">        addRecently(key,value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> leetcode.editor.cn.mycode.ID146;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用java中自带的linkedHashMap</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LRUCache2</span> &#123;</span><br><span class="line">        <span class="type">int</span> cap;</span><br><span class="line">        LinkedHashMap&lt;Integer,Integer&gt; cache=<span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LRUCache2</span><span class="params">(<span class="type">int</span> capacity)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.cap=capacity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">makeRecently</span><span class="params">(<span class="type">int</span> key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">value</span> <span class="operator">=</span> cache.get(key);</span><br><span class="line">        <span class="comment">//删除重新插入到队尾</span></span><br><span class="line">        cache.remove(key);</span><br><span class="line">        cache.put(key,value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">get</span><span class="params">(<span class="type">int</span> key)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!cache.containsKey(key)) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">value</span> <span class="operator">=</span> cache.get(key);</span><br><span class="line">        makeRecently(key);</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(<span class="type">int</span> key, <span class="type">int</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(cache.containsKey(key))</span><br><span class="line">        &#123;</span><br><span class="line">            cache.put(key,value);</span><br><span class="line">            makeRecently(key);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cache.size()&gt;=cap)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//链表头部就是最久未使用的key</span></span><br><span class="line">            <span class="type">Integer</span> <span class="variable">oldKey</span> <span class="operator">=</span> cache.keySet().iterator().next();</span><br><span class="line">            cache.remove(oldKey);</span><br><span class="line">        &#125;</span><br><span class="line">        cache.put(key, value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>LRU</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-27-1221-四平方和-二分版本.cpp</title>
    <url>/2024/02/27/2024-2-27-1221-%E5%9B%9B%E5%B9%B3%E6%96%B9%E5%92%8C-%E4%BA%8C%E5%88%86%E7%89%88%E6%9C%AC-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-27-1221-四平方和-二分版本-cpp"><a href="#2024-2-27-1221-四平方和-二分版本-cpp" class="headerlink" title="2024-2-27-1221-四平方和-二分版本.cpp"></a>2024-2-27-1221-四平方和-二分版本.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2500010</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">sum</span>&#123;</span><br><span class="line">    <span class="type">int</span> s,c,d;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt; (<span class="type">const</span> sum &amp;t)<span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s!=t.s)<span class="keyword">return</span> s&lt;t.s;</span><br><span class="line">        <span class="keyword">if</span>(s!=t.c)<span class="keyword">return</span> c&lt;t.c;</span><br><span class="line">        <span class="keyword">return</span> d&lt;t.s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;sum[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span>    <span class="comment">//二分版本</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> c=<span class="number">0</span>;c*c&lt;=n;c++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> d=c;c*c+d*d&lt;=n;d++)</span><br><span class="line">        sum[m++]=&#123;c*c+d*d,c,d&#125;;</span><br><span class="line"><span class="built_in">sort</span>(sum,sum+m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> a=<span class="number">0</span>;a*a&lt;=n;a++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> b=a;b*b+a*a&lt;=n;b++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t=n-a*a-b*b;</span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>,r=m;</span><br><span class="line">            <span class="keyword">while</span>(r&gt;l)</span><br><span class="line">            &#123;<span class="type">int</span> mid=(r+l)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(sum[mid].s&gt;=t)</span><br><span class="line">                    r=mid;</span><br><span class="line">                <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(sum[l].s==t)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d\n&quot;</span>,a,b,sum[l].c,sum[l].d);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-27-1227-分巧克力.cpp</title>
    <url>/2024/02/27/2024-2-27-1227-%E5%88%86%E5%B7%A7%E5%85%8B%E5%8A%9B-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-27-1227-分巧克力-cpp"><a href="#2024-2-27-1227-分巧克力-cpp" class="headerlink" title="2024-2-27-1227-分巧克力.cpp"></a>2024-2-27-1227-分巧克力.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">int</span> h[N],w[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> mid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        res+=(h[i]/mid)*(w[i]/mid);<span class="keyword">if</span>(res&gt;=k) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;h[i],&amp;w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l=<span class="number">1</span>,r=<span class="number">1e5</span>;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid=(l+r+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-27-1221-四平方和-哈希表版本.cpp</title>
    <url>/2024/02/27/2024-2-27-1221-%E5%9B%9B%E5%B9%B3%E6%96%B9%E5%92%8C-%E5%93%88%E5%B8%8C%E8%A1%A8%E7%89%88%E6%9C%AC-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-27-1221-四平方和-哈希表版本-cpp"><a href="#2024-2-27-1221-四平方和-哈希表版本-cpp" class="headerlink" title="2024-2-27-1221-四平方和-哈希表版本.cpp"></a>2024-2-27-1221-四平方和-哈希表版本.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2500010</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">sum</span>&#123;</span><br><span class="line">    <span class="type">int</span> s,c,d;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt; (<span class="type">const</span> sum &amp;t)<span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s!=t.s)<span class="keyword">return</span> s&lt;t.s;</span><br><span class="line">        <span class="keyword">if</span>(s!=t.c)<span class="keyword">return</span> c&lt;t.c;</span><br><span class="line">        <span class="keyword">return</span> d&lt;t.s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;sum[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">unordered_map&lt;<span class="type">int</span>, PII&gt; S;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span>    <span class="comment">//二分版本</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> c=<span class="number">0</span>;c*c&lt;=n;c++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> d=c;c*c+d*d&lt;=n;d++)</span><br><span class="line">        &#123;   <span class="type">int</span> t=c*c+d*d;</span><br><span class="line">            <span class="keyword">if</span>(S.<span class="built_in">count</span>(t)==<span class="number">0</span>)S[t]=&#123;c,d&#125;;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> a=<span class="number">0</span>;a*a&lt;=n;a++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> b=a;b*b+a*a&lt;=n;b++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t=n-a*a-b*b;</span><br><span class="line">            <span class="keyword">if</span>(S.<span class="built_in">count</span>(t))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d\n&quot;</span>,a,b,S[t].x,S[t].y );</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-27-795-前缀和.cpp</title>
    <url>/2024/02/27/2024-2-27-795-%E5%89%8D%E7%BC%80%E5%92%8C-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-27-795-前缀和-cpp"><a href="#2024-2-27-795-前缀和-cpp" class="headerlink" title="2024-2-27-795-前缀和.cpp"></a>2024-2-27-795-前缀和.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[N],s[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        s[i]=s[i<span class="number">-1</span>]+a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;   <span class="type">int</span> r,l;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;l,&amp;r);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,s[r]-s[l<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-27-730飞行员兄弟.cpp</title>
    <url>/2024/02/27/2024-2-27-730%E9%A3%9E%E8%A1%8C%E5%91%98%E5%85%84%E5%BC%9F-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-27-730飞行员兄弟-cpp"><a href="#2024-2-27-730飞行员兄弟-cpp" class="headerlink" title="2024-2-27-730飞行员兄弟.cpp"></a>2024-2-27-730飞行员兄弟.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> h[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        e=e*<span class="number">2</span>-h[i];</span><br><span class="line">        <span class="keyword">if</span>(e&gt;=<span class="number">1e5</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(e&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;h[i]);</span><br><span class="line">    <span class="type">int</span> l=<span class="number">0</span>,r=<span class="number">1e5</span>;</span><br><span class="line">    <span class="keyword">while</span>(r&gt;l)&#123;</span><br><span class="line">     <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">     <span class="keyword">if</span>(<span class="built_in">check</span>(mid))</span><br><span class="line">     r=mid;</span><br><span class="line">     <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-28-99-激光炸弹.cpp</title>
    <url>/2024/02/28/2024-2-28-99-%E6%BF%80%E5%85%89%E7%82%B8%E5%BC%B9-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-28-99-激光炸弹-cpp"><a href="#2024-2-28-99-激光炸弹-cpp" class="headerlink" title="2024-2-28-99-激光炸弹.cpp"></a>2024-2-28-99-激光炸弹.cpp</h1><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const <span class="keyword">int</span> N=<span class="number">5010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m; <span class="keyword">int</span> cnt,r; <span class="keyword">int</span> s[N][N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> main() &#123; cin&gt;&gt;cnt&gt;&gt;r; r=min(<span class="number">5001</span>,r); n=m=r;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(cnt--)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="keyword">x</span>,<span class="keyword">y</span>,w;</span><br><span class="line">    cin&gt;&gt;<span class="keyword">x</span>&gt;&gt;<span class="keyword">y</span>&gt;&gt;w;</span><br><span class="line">    <span class="keyword">x</span>++,<span class="keyword">y</span>++;</span><br><span class="line">    n=max(n,<span class="keyword">x</span>),m=max(m,<span class="keyword">y</span>);</span><br><span class="line">    <span class="regexp">s[x][y]</span>+=w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        s[i][j]+=<span class="regexp">s[i-1][j]</span>+<span class="regexp">s[i][j-1]</span>-<span class="regexp">s[i-1][j-1]</span>;<span class="regexp">//</span>二维前缀和</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=r;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=r;j&lt;=m;j++)</span><br><span class="line">        res=max(res,<span class="regexp">s[i][j]</span>-<span class="regexp">s[i-r][j]</span>-<span class="regexp">s[i][j-r]</span>+<span class="regexp">s[i-r][j-r]</span>); <span class="regexp">//</span>计算滑动窗口中的最大值</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-28-1205-买不到的数目.cpp</title>
    <url>/2024/02/29/2024-2-28-1205-%E4%B9%B0%E4%B8%8D%E5%88%B0%E7%9A%84%E6%95%B0%E7%9B%AE-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-28-1205-买不到的数目-cpp"><a href="#2024-2-28-1205-买不到的数目-cpp" class="headerlink" title="2024-2-28-1205-买不到的数目.cpp"></a>2024-2-28-1205-买不到的数目.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">cout&lt;&lt;(n<span class="number">-1</span>)*(m<span class="number">-1</span>)<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-27-796-子矩阵的和.cpp</title>
    <url>/2024/02/27/2024-2-27-796-%E5%AD%90%E7%9F%A9%E9%98%B5%E7%9A%84%E5%92%8C-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-27-796-子矩阵的和-cpp"><a href="#2024-2-27-796-子矩阵的和-cpp" class="headerlink" title="2024-2-27-796-子矩阵的和.cpp"></a>2024-2-27-796-子矩阵的和.cpp</h1><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include&lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">const <span class="keyword">int</span> N=<span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> a[N][N],<span class="regexp">s[N][N]</span>,ans[N];</span><br><span class="line"><span class="keyword">int</span> n,m,<span class="keyword">q</span>,x1,x2,y1,y2,z;</span><br><span class="line"><span class="keyword">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">scanf(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;<span class="keyword">q</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;scanf(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">    <span class="regexp">s[i][j]</span>=<span class="regexp">s[i-1][j]</span>+<span class="regexp">s[i][j-1]</span>-<span class="regexp">s[i-1][j-1]</span>+a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">q</span>--)</span><br><span class="line">&#123;</span><br><span class="line">scanf(<span class="string">&quot;%d%d%d%d&quot;</span>,&amp;x1,&amp;y1,&amp;x2,&amp;y2);</span><br><span class="line"><span class="keyword">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="regexp">s[x2][y2]</span>-<span class="regexp">s[x2][y1-1]</span>-<span class="regexp">s[x1-1][y2]</span>+<span class="regexp">s[x1-1][y1-1]</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-28-1216- 饮料换购.cpp</title>
    <url>/2024/02/29/2024-2-28-1216-%E9%A5%AE%E6%96%99%E6%8D%A2%E8%B4%AD-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-28-1216-饮料换购-cpp"><a href="#2024-2-28-1216-饮料换购-cpp" class="headerlink" title="2024-2-28-1216- 饮料换购.cpp"></a>2024-2-28-1216- 饮料换购.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> res;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> res=n;</span><br><span class="line">    <span class="keyword">while</span>(n&gt;=<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      res+=n/<span class="number">3</span>;  </span><br><span class="line">    n=n/<span class="number">3</span>+n%<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-28-1230-K倍区间.cpp</title>
    <url>/2024/02/28/2024-2-28-1230-K%E5%80%8D%E5%8C%BA%E9%97%B4-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-28-1230-K倍区间-cpp"><a href="#2024-2-28-1230-K倍区间-cpp" class="headerlink" title="2024-2-28-1230-K倍区间.cpp"></a>2024-2-28-1230-K倍区间.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> s[N],cnt[N];<span class="comment">//防止出现数据过大</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;<span class="type">int</span> m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">        s[i]=s[i<span class="number">-1</span>]+m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> res=<span class="number">0</span>;<span class="comment">//防止出现数据过大</span></span><br><span class="line">cnt[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> r=<span class="number">1</span>;r&lt;=n;r++)</span><br><span class="line">&#123;<span class="type">int</span> mod=s[r]%k;</span><br><span class="line">    res+=cnt[mod];</span><br><span class="line">    cnt[mod]++;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;res;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-29-02-01背包问题.cpp</title>
    <url>/2024/02/29/2024-2-29-02-01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-29-02-01背包问题-cpp"><a href="#2024-2-29-02-01背包问题-cpp" class="headerlink" title="2024-2-29-02-01背包问题.cpp"></a>2024-2-29-02-01背包问题.cpp</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N=1005;</span><br><span class="line"></span><br><span class="line">int n,m;</span><br><span class="line">int v[N],w[N];</span><br><span class="line">int f[N][N];</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    for(int i=1;i&lt;=n;i++) scanf(&quot;%d%d&quot;,&amp;v[i],&amp;w[i]);</span><br><span class="line">    for(int i=1;i&lt;=n;i++)</span><br><span class="line">        for(int j=1;j&lt;=m;j++)</span><br><span class="line">        &#123;f[i][j]=f[i-1][j];</span><br><span class="line">        if(j&gt;=v[i]) f[i][j]=max(f[i][j],f[i-1][j-v[i]]+w[i]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">printf(&quot;%d\n&quot;,f[n][m]);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-1-1015-摘花生.cpp</title>
    <url>/2024/03/03/2024-3-1-1015-%E6%91%98%E8%8A%B1%E7%94%9F-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-1-1015-摘花生-cpp"><a href="#2024-3-1-1015-摘花生-cpp" class="headerlink" title="2024-3-1-1015-摘花生.cpp"></a>2024-3-1-1015-摘花生.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N =<span class="number">105</span>;</span><br><span class="line"><span class="type">int</span> res;</span><br><span class="line"><span class="type">int</span> T,R,C,M[N][N],F[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;R,&amp;C);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=R;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=C;j++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;M[i][j]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=R;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=C;j++)</span><br><span class="line">       &#123;F[i][j]=M[i][j];</span><br><span class="line">        F[i][j]+=<span class="built_in">max</span>(F[i<span class="number">-1</span>][j],F[i][j<span class="number">-1</span>]);</span><br><span class="line">&#125;cout&lt;&lt;F[R][C]&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-2-29-503-借教室.cpp</title>
    <url>/2024/02/29/2024-2-29-503-%E5%80%9F%E6%95%99%E5%AE%A4-cpp/</url>
    <content><![CDATA[<h1 id="2024-2-29-503-借教室-cpp"><a href="#2024-2-29-503-借教室-cpp" class="headerlink" title="2024-2-29-503-借教室.cpp"></a>2024-2-29-503-借教室.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">st</span>&#123;</span><br><span class="line"><span class="type">int</span> d,s,t;</span><br><span class="line">&#125;;</span><br><span class="line">st s[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> r[N];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> diff[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="built_in">memset</span>(  diff, <span class="number">0</span>, <span class="keyword">sizeof</span> diff);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">       &#123; diff[s[i].s]+=s[i].d;</span><br><span class="line">        diff[s[i].t+<span class="number">1</span>]-=s[i].d;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;diff[i]+=diff[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(r[i]&lt;diff[i])</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;r[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;s[i].d,&amp;s[i].s,&amp;s[i].t);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> l=<span class="number">1</span>,r=m;</span><br><span class="line"><span class="keyword">while</span>(r&gt;l)</span><br><span class="line">&#123;<span class="type">int</span> mid=(r+l+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">check</span>(mid))</span><br><span class="line">        l=mid;</span><br><span class="line">    <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(l==m)</span><br><span class="line">    cout&lt;&lt;<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl&lt;&lt;r+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-1-1212- 地宫取宝.cpp</title>
    <url>/2024/03/03/2024-3-1-1212-%E5%9C%B0%E5%AE%AB%E5%8F%96%E5%AE%9D-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-1-1212-地宫取宝-cpp"><a href="#2024-3-1-1212-地宫取宝-cpp" class="headerlink" title="2024-3-1-1212- 地宫取宝.cpp"></a>2024-3-1-1212- 地宫取宝.cpp</h1><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int <span class="symbol">N</span> = <span class="number">55</span>;</span><br><span class="line">int <span class="symbol">MOD</span>=<span class="number">1000000007</span>;</span><br><span class="line">int n,m,k;</span><br><span class="line">int w[<span class="symbol">N</span>][<span class="symbol">N</span>];</span><br><span class="line">int f[<span class="symbol">N</span>][<span class="symbol">N</span>][<span class="number">13</span>][<span class="number">14</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    for(int i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        for(int j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;w[i][j];</span><br><span class="line">            w[i][j]++;</span><br><span class="line">        &#125;</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>][w[<span class="number">1</span>][<span class="number">1</span>]]=<span class="number">1</span>;</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    for(int i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        for(int j= <span class="number">1</span>; j &lt;= m; j ++ )</span><br><span class="line">        &#123;if(i==<span class="number">1</span>||j==<span class="number">1</span>) continue;</span><br><span class="line">        for(int u = <span class="number">0</span>;u&lt;= k; u ++ )</span><br><span class="line">        for(int v = <span class="number">0</span>; v &lt;= <span class="number">13</span>; v ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            int &amp;val=f[i][j][u][v];</span><br><span class="line">            val=(val+f[i<span class="number">-1</span>][j][u][v])<span class="comment">%MOD;</span></span><br><span class="line">            val=(val+f[i][j<span class="number">-1</span>][u][v])<span class="comment">%MOD;</span></span><br><span class="line">            if(u&gt;<span class="number">0</span>&amp;&amp;v==w[i][j])</span><br><span class="line">            &#123;</span><br><span class="line">                for(int c=<span class="number">0</span>;c&lt;v;c++)</span><br><span class="line">                &#123;</span><br><span class="line">                    val=(val+f[i<span class="number">-1</span>][j][u<span class="number">-1</span>][c])<span class="comment">%MOD;</span></span><br><span class="line">                    val=(val+f[i][j<span class="number">-1</span>][u<span class="number">-1</span>][c]<span class="comment">%MOD);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        int res=<span class="number">0</span>;</span><br><span class="line">        for (int i = <span class="number">0</span>; i &lt; <span class="number">13</span>; i ++ ) res=(res+f[n][m][k][i])<span class="comment">%MOD;</span></span><br><span class="line">        cout&lt;&lt;res;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-1-895-最长上升子序列.cpp</title>
    <url>/2024/03/03/2024-3-1-895-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-1-895-最长上升子序列-cpp"><a href="#2024-3-1-895-最长上升子序列-cpp" class="headerlink" title="2024-3-1-895-最长上升子序列.cpp"></a>2024-3-1-895-最长上升子序列.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5005</span>;</span><br><span class="line"><span class="type">int</span> a[N],f[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;   f[i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;a[j])</span><br><span class="line">            f[i]=<span class="built_in">max</span>(f[i],f[j]+<span class="number">1</span>);</span><br><span class="line">        res=<span class="built_in">max</span>(res,f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-2-1214-波动数列.cpp</title>
    <url>/2024/03/03/2024-3-2-1214-%E6%B3%A2%E5%8A%A8%E6%95%B0%E5%88%97-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-2-1214-波动数列-cpp"><a href="#2024-3-2-1214-波动数列-cpp" class="headerlink" title="2024-3-2-1214-波动数列.cpp"></a>2024-3-2-1214-波动数列.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>,MOD=<span class="number">100000007</span>;</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="type">int</span> n,s,a,b;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get_mod</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a%b+b)%b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;n, &amp;s, &amp;a, &amp;b);</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">    &#123;<span class="comment">//注意，f[i][j] 代表第i位，取i个a或-b，模n为j的个数；</span></span><br><span class="line">f[i][j]=(f[i<span class="number">-1</span>][<span class="built_in">get_mod</span>(j-a*(n-i),n)]+f[i<span class="number">-1</span>][<span class="built_in">get_mod</span>(j+b*(n-i),n)])%MOD;<span class="comment">//题解https://www.cnblogs.com/onlyblues/p/15907623.html</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">     cout&lt;&lt;f[n<span class="number">-1</span>][<span class="built_in">get_mod</span>(s,n)]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-2-1210-连号区间数.cpp</title>
    <url>/2024/03/03/2024-3-2-1210-%E8%BF%9E%E5%8F%B7%E5%8C%BA%E9%97%B4%E6%95%B0-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-2-1210-连号区间数-cpp"><a href="#2024-3-2-1210-连号区间数-cpp" class="headerlink" title="2024-3-2-1210-连号区间数.cpp"></a>2024-3-2-1210-连号区间数.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">10010</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n,res;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> manx=-N,minx=N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt;n ; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">        manx=<span class="built_in">max</span>(manx,a[j]);</span><br><span class="line">        minx=<span class="built_in">min</span>(minx,a[j]);</span><br><span class="line">        <span class="keyword">if</span>(manx-minx==j-i) res++;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">cout&lt;&lt;res;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-2-4262-空调.cpp</title>
    <url>/2024/03/03/2024-3-2-4262-%E7%A9%BA%E8%B0%83-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-2-4262-空调-cpp"><a href="#2024-3-2-4262-空调-cpp" class="headerlink" title="2024-3-2-4262-空调.cpp"></a>2024-3-2-4262-空调.cpp</h1><figure class="highlight plaintext"><figcaption><span><iostream></span></figcaption><table><tr><td class="code"><pre><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">const int N = 1e5+10;</span><br><span class="line">int a[N],b[N];</span><br><span class="line">int n;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">void batch_add(int l,int r,int c)&#123;//创建差分数组</span><br><span class="line">    b[l]+=c,b[r+1]-=c;</span><br><span class="line">    cout&lt;&lt;b[l]&lt;&lt;&quot; &quot;&lt;&lt;b[r+1]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    for(int i=1;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        int t;cin&gt;&gt;t;</span><br><span class="line">        a[i]-=t;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)batch_add(i,i,a[i]);</span><br><span class="line">    int s=0,t=0;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        if(b[i]&gt;0)s+=b[i];</span><br><span class="line">        else if(b[i]&lt;0)t-=b[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;max(s,t);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-2-1236-递增三元组.cpp</title>
    <url>/2024/03/03/2024-3-2-1236-%E9%80%92%E5%A2%9E%E4%B8%89%E5%85%83%E7%BB%84-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-2-1236-递增三元组-cpp"><a href="#2024-3-2-1236-递增三元组-cpp" class="headerlink" title="2024-3-2-1236-递增三元组.cpp"></a>2024-3-2-1236-递增三元组.cpp</h1><figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int <span class="symbol">N</span> = <span class="number">100010</span>;</span><br><span class="line">int cnt[<span class="symbol">N</span>],as[<span class="symbol">N</span>],cs[<span class="symbol">N</span>];//as[i]表示在a[]中有多少数小于b[i]</span><br><span class="line">int a[<span class="symbol">N</span>],b[<span class="symbol">N</span>],c[<span class="symbol">N</span>],s[<span class="symbol">N</span>],n;//cs[i]表示在c[]中有多少数大于b[i]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;   cin&gt;&gt;n;</span><br><span class="line">    for (int i = <span class="number">0</span>; i &lt; n; i ++ ) scanf(<span class="string">&quot;%d&quot;</span>, &amp;a[i]),a[i]++;</span><br><span class="line">    for (int i = <span class="number">0</span>; i &lt; n; i ++ ) scanf(<span class="string">&quot;%d&quot;</span>, &amp;b[i]),b[i]++;</span><br><span class="line">    for (int i = <span class="number">0</span>; i &lt; n; i ++ ) scanf(<span class="string">&quot;%d&quot;</span>, &amp;c[i]),c[i]++;</span><br><span class="line"></span><br><span class="line">    for(int i=<span class="number">0</span>;i&lt;n;i++)cnt[a[i]]++;</span><br><span class="line">    for (int i = <span class="number">1</span>; i &lt;<span class="symbol">N</span>; i ++ )s[i]=s[i<span class="number">-1</span>]+cnt[i];</span><br><span class="line">    for (int i = <span class="number">0</span>; i &lt; n; i ++ ) as[i]=s[b[i]<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line">    //求cs[]</span><br><span class="line">    memset(cnt, <span class="number">0</span>, sizeof cnt);memset(s,<span class="number">0</span>,sizeof s);</span><br><span class="line">    for(int i=<span class="number">0</span>;i&lt;n;i++)cnt[c[i]]++;</span><br><span class="line">    for(int i=<span class="number">1</span>;i&lt;<span class="symbol">N</span>;i++)s[i]=s[i<span class="number">-1</span>]+cnt[i];</span><br><span class="line">    for(int i=<span class="number">0</span>;i&lt;n;i++)cs[i]=s[<span class="symbol">N</span><span class="number">-1</span>]-s[b[i]];</span><br><span class="line"></span><br><span class="line">    long long res=<span class="number">0</span>;</span><br><span class="line">    for(int i=<span class="number">0</span>;i&lt;n;i++) res+=(long long)as[i]*cs[i];<span class="comment">/*错误实例res+=</span></span><br><span class="line"><span class="comment">    (long long)(as[i]*cs[i]);不需要加括号*/</span></span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-2-562-壁画.cpp</title>
    <url>/2024/03/03/2024-3-2-562-%E5%A3%81%E7%94%BB-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-2-562-壁画-cpp"><a href="#2024-3-2-562-壁画-cpp" class="headerlink" title="2024-3-2-562-壁画.cpp"></a>2024-3-2-562-壁画.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e7</span>;</span><br><span class="line"><span class="type">int</span> s[N],n;</span><br><span class="line"><span class="type">char</span> a[N];</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">1</span>;x&lt;=T;x++)</span><br><span class="line">    &#123;   cin&gt;&gt;n;</span><br><span class="line">        cin&gt;&gt;a;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) s[i]=a[i<span class="number">-1</span>]+s[i<span class="number">-1</span>]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> m=(n+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=m;j&lt;=n;j++)</span><br><span class="line">                ans=<span class="built_in">max</span>(ans,s[j]-s[j-m]);</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Case #&quot;</span>&lt;&lt;x&lt;&lt;<span class="string">&quot;: &quot;</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-21</title>
    <url>/2024/03/21/2024-3-21/</url>
    <content><![CDATA[<p><img src="https://image.cai094.top/file/af7dbf6d3e58627caaee1.jpg" alt="img" title="谢楚灵"></p>
]]></content>
  </entry>
  <entry>
    <title>2024-3-3-1204- 错误票据.cpp</title>
    <url>/2024/03/03/2024-3-3-1204-%E9%94%99%E8%AF%AF%E7%A5%A8%E6%8D%AE-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-3-1204-错误票据-cpp"><a href="#2024-3-3-1204-错误票据-cpp" class="headerlink" title="2024-3-3-1204- 错误票据.cpp"></a>2024-3-3-1204- 错误票据.cpp</h1><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10010</span>;</span><br><span class="line"><span class="type">int</span> n,a[N];<span class="type">int</span> res1,res2;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> cnt;</span><br><span class="line">    cin&gt;&gt;cnt;</span><br><span class="line">    string line;</span><br><span class="line">    <span class="built_in">getline</span>(cin,line);<span class="comment">//忽略第一行回车</span></span><br><span class="line">    <span class="keyword">while</span> (cnt -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">getline</span>(cin,line);</span><br><span class="line">        <span class="function">stringstream <span class="title">ssin</span><span class="params">(line)</span></span>;</span><br><span class="line">        <span class="keyword">while</span>(ssin&gt;&gt;a[n])n++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a,a+n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==a[i<span class="number">-1</span>])res2=a[i];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i]&gt;=a[i<span class="number">-1</span>]+<span class="number">2</span>) res1=a[i]<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res1&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;res2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-3-466-回文日期.cpp</title>
    <url>/2024/03/04/2024-3-3-466-%E5%9B%9E%E6%96%87%E6%97%A5%E6%9C%9F-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-3-466-回文日期-cpp"><a href="#2024-3-3-466-回文日期-cpp" class="headerlink" title="2024-3-3-466-回文日期.cpp"></a>2024-3-3-466-回文日期.cpp</h1><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="meta">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#include &lt;sstream&gt;</span></span><br><span class="line"><span class="meta">#include &lt;algorithm&gt;</span></span><br><span class="line"><span class="keyword">using</span> namespace std;</span><br><span class="line">const <span class="type">int</span> N = <span class="number">10010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> day1,day2,res,days[<span class="number">13</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="keyword">check</span>(<span class="type">int</span> <span class="type">date</span>)</span><br><span class="line">&#123;<span class="type">int</span> year=<span class="type">date</span>/<span class="number">10000</span>;</span><br><span class="line"><span class="type">int</span> mouth=<span class="type">date</span>%<span class="number">10000</span>/<span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> day=<span class="type">date</span>%<span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span>(mouth==<span class="number">0</span>||mouth&gt;<span class="number">12</span>)<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span>(day==<span class="number">0</span>||mouth!=<span class="number">2</span>&amp;&amp;day&gt;days[mouth]) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="type">int</span> leap=year%<span class="number">100</span>&amp;&amp;year%<span class="number">4</span>==<span class="number">0</span>||year%<span class="number">400</span>==<span class="number">0</span>;//注意闰年判断条件</span><br><span class="line"><span class="keyword">if</span>(mouth==<span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(day&gt;<span class="number">28</span>+leap) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    cin&gt;&gt;day1&gt;&gt;day2;</span><br><span class="line">    <span class="type">int</span> rea=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1000</span>;i&lt;<span class="number">10000</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> <span class="type">date</span>=i,x=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)</span><br><span class="line">            <span class="type">date</span>=<span class="type">date</span>*<span class="number">10</span>+x%<span class="number">10</span>,x/=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>(day1&lt;=<span class="type">date</span>&amp;&amp;day2&gt;=<span class="type">date</span>&amp;&amp;<span class="keyword">check</span>(<span class="type">date</span>))res++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-4-1229-日期问题.cpp</title>
    <url>/2024/03/04/2024-3-4-1229-%E6%97%A5%E6%9C%9F%E9%97%AE%E9%A2%98-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-4-1229-日期问题-cpp"><a href="#2024-3-4-1229-日期问题-cpp" class="headerlink" title="2024-3-4-1229-日期问题.cpp"></a>2024-3-4-1229-日期问题.cpp</h1><details>
<summary> 2024-3-4-1229-日期问题.cpp </summary>

<pre><code class="c++">
#include &lt;iostream&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;

using namespace std;
int days[13]=&#123;0,31,28,31,30,31,30,31,31,30,31,30,31&#125;;
bool check_vaild(int year,int month,int day)&#123;
    if(month==0||month&gt;12)return false;
    if(month!=2)&#123;
        if(day==0||day&gt;days[month])return false;&#125;

    if(month==2)
    &#123;
        int leap=year%4==0&amp;&amp;year%100||year%400==0;
        if(day==0||day&gt;28+leap)return false;
    &#125;
    return true;
&#125;
int main()
&#123;       int a,b,c;
    scanf(&quot;%d/%d/%d&quot;, &amp;a,&amp;b,&amp;c);
    for(int date=19600101;date&lt;20591231;date++)&#123;
        int year=date/10000,month=date%10000/100,day=date%100;
        if(check_vaild(year,month,day))
        &#123;
            if(year%100==a&amp;&amp;month==b&amp;&amp;day==c||//年月日表示
            year%100==c&amp;&amp;month==a&amp;&amp;day==b||//月日年表示
            year%100==c&amp;&amp;month==b&amp;&amp;day==a//日月年表示
            )
            printf(&quot;%d-%02d-%02d\n&quot;,year,month,day);//02表示不足2位补0
        &#125;
    &#125;

        return 0;
&#125;
</code></pre>
</details>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-3-1245- 特别数的和.cpp</title>
    <url>/2024/03/04/2024-3-3-1245-%E7%89%B9%E5%88%AB%E6%95%B0%E7%9A%84%E5%92%8C-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-3-1245-特别数的和-cpp"><a href="#2024-3-3-1245-特别数的和-cpp" class="headerlink" title="2024-3-3-1245- 特别数的和.cpp"></a>2024-3-3-1245- 特别数的和.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="type">int</span> n,res;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;<span class="type">int</span> j=i;</span><br><span class="line">        <span class="keyword">while</span>(j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> cnt=j%<span class="number">10</span>;</span><br><span class="line">            j=j/<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span>(cnt==<span class="number">2</span>||cnt==<span class="number">0</span>||cnt==<span class="number">1</span>||cnt==<span class="number">9</span>)</span><br><span class="line">            &#123;res+=i;<span class="keyword">break</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-3-4-1219-移动距离.cpp</title>
    <url>/2024/03/04/2024-3-4-1219-%E7%A7%BB%E5%8A%A8%E8%B7%9D%E7%A6%BB-cpp/</url>
    <content><![CDATA[<h1 id="2024-3-4-1219-移动距离-cpp"><a href="#2024-3-4-1219-移动距离-cpp" class="headerlink" title="2024-3-4-1219-移动距离.cpp"></a>2024-3-4-1219-移动距离.cpp</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,w;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;cin&gt;&gt;w&gt;&gt;m&gt;&gt;n;</span><br><span class="line">m--;</span><br><span class="line">n--;</span><br><span class="line"><span class="type">int</span> x1=m/w,x2=n/w;</span><br><span class="line"><span class="type">int</span> y1=m%w,y2=n%w;</span><br><span class="line"><span class="keyword">if</span>(x1%<span class="number">2</span>)y1=w<span class="number">-1</span>-y1;</span><br><span class="line"><span class="keyword">if</span>(x2%<span class="number">2</span>)y2=w<span class="number">-1</span>-y2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> res=<span class="built_in">abs</span>(x1-x2)+<span class="built_in">abs</span>(y1-y2);</span><br><span class="line">    cout&lt;&lt;res;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>算法</tag>
        <tag>距离</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-5-14小计</title>
    <url>/2024/05/14/2024-5-14%E5%B0%8F%E8%AE%A1/</url>
    <content><![CDATA[<p>今天学习了java的reflect，可以通过forname获取对象，从而得到该类的所有信息，例如：类中的方法，属性，构造函数等。以及其对应的类型。还学写了代理，通过代理可以调用被代理对象的方法，并且可以在方法执行前后添加一些代码。分为静态与动态代理，静态代理需要提前写好代理类，而动态代理不需要提前写好代理类，但是需要提前写好接口。了解了日志和单元测试。</p>
]]></content>
  </entry>
  <entry>
    <title>2024-6-20随笔</title>
    <url>/2024/06/20/2024-6-20%E9%9A%8F%E7%AC%94/</url>
    <content><![CDATA[<h2 id="学习有感"><a href="#学习有感" class="headerlink" title="学习有感"></a>学习有感</h2><h2 id="学习三角"><a href="#学习三角" class="headerlink" title="学习三角"></a>学习三角</h2><ul>
<li>学习加深方式便是练习与交流想法</li>
</ul>
<p><img src="/../img/2024-6-20/image.png" alt="alt text"></p>
]]></content>
  </entry>
  <entry>
    <title>438找到字符串中所有字母异位词</title>
    <url>/2025/01/16/438/</url>
    <content><![CDATA[<h1 id="方法一：定长滑窗"><a href="#方法一：定长滑窗" class="headerlink" title="方法一：定长滑窗"></a>方法一：定长滑窗</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">findAnagrams</span><span class="params">(String s, String p)</span> &#123;</span><br><span class="line">          <span class="comment">//保存答案</span></span><br><span class="line">        List&lt;Integer&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//p的异位词</span></span><br><span class="line">        <span class="comment">//给定两个字符串 s 和 p，找到 s 中所有 p 的</span></span><br><span class="line">        <span class="comment">//异位词</span></span><br><span class="line">        <span class="comment">// 的子串，返回这些子串的起始索引。不考虑答案输出的顺序。</span></span><br><span class="line">        <span class="type">int</span>[] cntS = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">30</span>];</span><br><span class="line">        <span class="type">int</span>[] cntP = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">30</span>];</span><br><span class="line">        <span class="comment">//取出子串</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c : p.toCharArray()) &#123;</span><br><span class="line">              cntP[c-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> r=<span class="number">0</span>;r&lt;s.length();r++)</span><br><span class="line">        &#123;</span><br><span class="line">            cntS[s.charAt(r)-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">            <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> r - p.length() + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(l&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(Arrays.equals(cntS,cntP))&#123;</span><br><span class="line">                res.add(l);</span><br><span class="line">            &#125;</span><br><span class="line">            cntS[s.charAt(l) - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="方法二：不定长滑窗"><a href="#方法二：不定长滑窗" class="headerlink" title="方法二：不定长滑窗"></a>方法二：不定长滑窗</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">findAnagrams</span><span class="params">(String s, String p)</span> &#123; List&lt;Integer&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span>[] cnt = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">30</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c : p.toCharArray()) &#123;</span><br><span class="line">            cnt[c-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> r=<span class="number">0</span>;r&lt;s.length();r++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> s.charAt(r)-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            cnt[c]--;</span><br><span class="line">           <span class="keyword">while</span>(cnt[c]&lt;<span class="number">0</span>) &#123;  </span><br><span class="line">            cnt[s.charAt(l)-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">            l++;</span><br><span class="line">           &#125;</span><br><span class="line">            <span class="keyword">if</span>(r-l+<span class="number">1</span>==p.length())</span><br><span class="line">            &#123;</span><br><span class="line">                res.add(l);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>算法,双指针</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-5-15学习进度</title>
    <url>/2024/05/15/2024-5-15%E5%AD%A6%E4%B9%A0%E8%BF%9B%E5%BA%A6/</url>
    <content><![CDATA[<ul>
<li>已经学习至<strong>js-dom</strong></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Git使用方法</title>
    <url>/2024/03/18/Git%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<ul>
<li><strong>1 工作流</strong><br>首先你可以提出更改（把它们添加到暂存区），使用如下命令：</li>
</ul>
<pre><code>git add &lt;filename&gt;  //表示添加文件到缓存区
git add *或git add . //表示添加所有1文件
</code></pre>
<ul>
<li><strong>2</strong><br>这是 git 基本工作流程的第一步；使用如下命令以实际提交改动：</li>
</ul>
<p><code>git commit -m &quot;代码提交信息&quot;  </code><br>现在，你的改动已经提交到了 HEAD，但是还没到你的远端仓库。  </p>
<ul>
<li><strong>3 推送改动</strong><br>你的改动现在已经在本地仓库的 HEAD 中了。执行如下命令以将这些改动提交到远端仓库：</li>
</ul>
<p><code>git push origin master</code><br>可以把 master 换成你想要推送的任何分支。<br>如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：<br><code>git remote add origin &lt;server&gt; </code><br>如此你就能够将你的改动推送到所添加的服务器上去了。</p>
<ul>
<li><strong>4 更新与合并</strong><br>要更新你的本地仓库至最新改动，执行：<br>git pull<br>以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。<br>要合并其他分支到你的当前分支（例如 master），执行：</li>
</ul>
<p><code>git merge &lt;branch&gt;</code><br>在这两种情况下，git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现冲突（conflicts）。 这时候就需要你修改这些文件来手动合并这些冲突（conflicts）。改完之后，你需要执行如下命令以将它们标记为合并成功：<br><code>git add &lt;filename&gt; </code><br>在合并改动之前，你可以使用如下命令预览差异：<br><code>git diff &lt;source_branch&gt; &lt;target_branch&gt;   </code></p>
<ul>
<li><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3></li>
</ul>
<p>分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是”默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。<br>创建一个叫做”feature_x”的分支，并切换过去：<br><code>git checkout -b feature_x </code><br>切换回主分支：<br><code>git checkout master  </code><br>再把新建的分支删掉：<br><code>git branch -d feature_x  </code><br>除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：<br><code>git push origin &lt;branch&gt;  </code></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo备份事项</title>
    <url>/2023/12/03/Hexo%E5%A4%87%E4%BB%BD%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<h3 id="由于每次更新后都要输入大量命令行十分麻烦，遂创建一键部署脚本方便备份部署"><a href="#由于每次更新后都要输入大量命令行十分麻烦，遂创建一键部署脚本方便备份部署" class="headerlink" title="由于每次更新后都要输入大量命令行十分麻烦，遂创建一键部署脚本方便备份部署"></a>由于每次更新后都要输入大量命令行十分麻烦，遂创建一键部署脚本方便备份部署</h3><p>在博客根目录下创建deploy.sh文件，写入</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Start&quot;</span></span><br><span class="line">git <span class="built_in">add</span> .</span><br><span class="line">git commit -<span class="keyword">m</span> backup</span><br><span class="line">git push</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Finish&quot;</span></span><br><span class="line"><span class="keyword">echo</span> 按任意键继续</span><br><span class="line"><span class="keyword">read</span> -n <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>保存后，在博客根目录双击执行或用命令.&#x2F;deploy.sh 即可实现博客的一键备份并部署</p>
<h3 id="恢复博客"><a href="#恢复博客" class="headerlink" title="恢复博客"></a>恢复博客</h3><p>基础环境搭建<br>Hexo博客基础环境已经搭好：比如安装npm、git、nodejs、hexo安装…</p>
<p>克隆项目到本地<br>Ctrl+Alt+T打开终端，输入</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">git</span>@gitee.com:stringwind/blog_backup.git</span><br></pre></td></tr></table></figure>


<p>git clone 自己的仓库地址</p>
<p>恢复博客<br>在clone来的文件夹里执行</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-cli</span><br><span class="line">npm <span class="keyword">install</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-git</span><br></pre></td></tr></table></figure>
<p>&#x3D;&#x3D;注意由于主题未备份，需要进入站源文件修改主题为默认主题才可恢复&#x3D;&#x3D;<br>这样博客源文件就成功移植了，再用hexo clean、hexo g、hexo d即可部署完成</p>
]]></content>
  </entry>
  <entry>
    <title>My lover</title>
    <url>/2023/12/03/My-lover/</url>
    <content><![CDATA[<h1 id="my-lover"><a href="#my-lover" class="headerlink" title="my lover"></a>my lover</h1><p><img src="https://cai6.xyz/file/af7dbf6d3e58627caaee1.jpg" alt="xcl"></p>
]]></content>
  </entry>
  <entry>
    <title>Java中reflect的学习</title>
    <url>/2024/05/13/Java%E4%B8%ADreflect%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> reflect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> reflect.entity.Employee;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title class_"><span class="keyword">class</span> <span class="title">ClassSample</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class emplyeeClass = Class.forName(<span class="string">&quot;reflect.entity.Employee&quot;</span>);<span class="comment">//返回具有指定名称的类对象</span></span><br><span class="line">            System.out.println(<span class="string">&quot;已被加载&quot;</span>);</span><br><span class="line">            Employee emp = (Employee) emplyeeClass.<span class="keyword">new</span><span class="type">Instance</span>();<span class="comment">//使用类对象生成对象</span></span><br><span class="line">            System.out.println(emp);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">RuntimeException</span>(e);<span class="comment">//类名与类路径错误</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InstantiationException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">RuntimeException</span>(e);<span class="comment">//实例化异常，例如抽象类无法被实例化</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">RuntimeException</span>(e);<span class="comment">//权限不足，作用域外</span></span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>idea踩坑</title>
    <url>/2024/09/08/idea%E8%B8%A9%E5%9D%91/</url>
    <content><![CDATA[<h1 id="idae踩坑"><a href="#idae踩坑" class="headerlink" title="idae踩坑"></a>idae踩坑</h1><img src="/2024/09/08/idea%E8%B8%A9%E5%9D%91/image.png" class="" title="修改示例">  
<p><em><strong>需要在这里将java设置与项目相同，否则无法打包</strong></em></p>
]]></content>
  </entry>
  <entry>
    <title>openGl配置</title>
    <url>/2024/09/23/openGl%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="注意配置"><a href="#注意配置" class="headerlink" title="注意配置"></a>注意配置</h1><img src="/2024/09/23/openGl%E9%85%8D%E7%BD%AE/%7B1B68A5CC-4897-465F-8DCC-F36B0C8508AD%7D.png" class="" title="配置如图">
]]></content>
      <tags>
        <tag>openGl</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2024/03/29/test/</url>
    <content><![CDATA[<details>
  <summary> 折叠代码示例 </summary>
  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">  代码</span><br><span class="line">  </span><br></pre></td></tr></table></figure>
</details>]]></content>
  </entry>
  <entry>
    <title>wowjs动画</title>
    <url>/2025/01/18/wowjs%E5%8A%A8%E7%94%BB/</url>
    <content><![CDATA[<h2 id="flip动画效果。"><a href="#flip动画效果。" class="headerlink" title="flip动画效果。"></a>flip动画效果。</h2><div class='wow animate__flip' data-wow-duration='' data-wow-delay='' data-wow-offset=''  data-wow-iteration='' ><div class="note green icon-padding modern"><i class="note-icon fas fa-fan"></i><p><code>flip</code>动画效果。</p>
</div></div>
<h2 id="zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次。"><a href="#zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次。" class="headerlink" title="zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次。"></a>zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次。</h2><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p>
</div></div>
<h2 id="slideInRight动画效果，持续5s，延时5s。"><a href="#slideInRight动画效果，持续5s，延时5s。" class="headerlink" title="slideInRight动画效果，持续5s，延时5s。"></a>slideInRight动画效果，持续5s，延时5s。</h2><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p>
</div></div>
<h2 id="heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。"><a href="#heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。" class="headerlink" title="heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。"></a>heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</h2><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p>
</div></div>

<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">flip动画效果。</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">wow</span> animate__flip %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> green &#x27;fas fa-fan&#x27; modern%&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">`flip`动画效果。</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endwow</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次。</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">wow</span> animate__zoomIn,5s,5s,100,10 %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endwow</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">slideInRight动画效果，持续5s，延时5s。</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">wow</span> animate__slideInRight,5s,5s %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> orange &#x27;fas fa-car&#x27; modern%&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endwow</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">wow</span> animate__heartBeat,,5s,,10 %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">note</span> red &#x27;fas fa-battery-half&#x27; modern%&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endwow</span> %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>今日搭建进度</title>
    <url>/2023/12/05/%E4%BB%8A%E6%97%A5%E6%90%AD%E5%BB%BA%E8%BF%9B%E5%BA%A6/</url>
    <content><![CDATA[<p>完成netlify拉取，利用dns进行加速，已将github库设置为private</p>
]]></content>
  </entry>
  <entry>
    <title>博文测试</title>
    <url>/2024/05/12/%E4%BD%A0%E5%A5%BD/</url>
    <content><![CDATA[<p><img src="/../img/1691894007699.jpeg" alt="alt text"></p>
]]></content>
  </entry>
  <entry>
    <title>动画版小谢</title>
    <url>/2024/05/25/%E5%8A%A8%E7%94%BB%E7%89%88%E5%B0%8F%E8%B0%A2/</url>
    <content><![CDATA[<h1 id="通过chatgpt-4o生成"><a href="#通过chatgpt-4o生成" class="headerlink" title="通过chatgpt-4o生成"></a>通过chatgpt-4o生成</h1><p><img src="/../img/%E5%8A%A8%E7%94%BB%E7%89%88%E5%B0%8F%E8%B0%A2/A_simple_line_drawing_of_a_girl_with_straight_blac.png" alt="也许会一直喜欢"></p>
<hr>
<p><img src="/../img/%E5%8A%A8%E7%94%BB%E7%89%88%E5%B0%8F%E8%B0%A2/DALL%C2%B7E%202024-05-24%2017.43.32%20-%20A%20simple%20line%20drawing%20of%20a%20girl%20with%20straight%20black%20hair%20and%20a%20layered,%20edgy%20cut.%20She%20is%20wearing%20a%20blue%20jacket%20with%20white%20sleeves%20and%20a%20white%20T-shirt%20.webp" alt="也许会一直喜欢"></p>
]]></content>
  </entry>
  <entry>
    <title>友链新增</title>
    <url>/2025/01/19/%E5%8F%8B%E9%93%BE%E6%96%B0%E5%A2%9E/</url>
    <content><![CDATA[<h1 id="完善友链"><a href="#完善友链" class="headerlink" title="完善友链"></a>完善友链</h1><p>使用<a href="https://sm.ms/">图床</a>上传好友的logo 并且配置</p>
]]></content>
      <categories>
        <category>备用</category>
      </categories>
      <tags>
        <tag>友链</tag>
      </tags>
  </entry>
  <entry>
    <title>在hexo中插入音乐</title>
    <url>/2023/12/04/%E5%9C%A8hexo%E4%B8%AD%E6%8F%92%E5%85%A5%E9%9F%B3%E4%B9%90/</url>
    <content><![CDATA[<p><a href="https://easyhexo.com/3-Plugins-use-and-config/3-1-hexo-tag-aplayer/">链接</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>完成 Hexo-Butterfly主题在主页添加GitHub贡献日历</title>
    <url>/2025/01/19/%E5%AE%8C%E6%88%90-Hexo-Butterfly%E4%B8%BB%E9%A2%98%E5%9C%A8%E4%B8%BB%E9%A1%B5%E6%B7%BB%E5%8A%A0GitHub%E8%B4%A1%E7%8C%AE%E6%97%A5%E5%8E%86/</url>
    <content><![CDATA[<p>重要配置<br> user: pengcai6 #git用户名<br>  apiurl: ‘<a href="https://github-contribute-plum.vercel.app/">https://github-contribute-plum.vercel.app</a>‘   #该网站使用vercel搭建<br>  minheight:  </p>
<h2 id="目前只在我的关于中展示"><a href="#目前只在我的关于中展示" class="headerlink" title="目前只在我的关于中展示"></a>目前只在我的关于中展示</h2><img src="/2025/01/19/%E5%AE%8C%E6%88%90-Hexo-Butterfly%E4%B8%BB%E9%A2%98%E5%9C%A8%E4%B8%BB%E9%A1%B5%E6%B7%BB%E5%8A%A0GitHub%E8%B4%A1%E7%8C%AE%E6%97%A5%E5%8E%86/pasted-7.png" class="" title="具体可以前往关于观看">]]></content>
  </entry>
  <entry>
    <title>实现向上取整</title>
    <url>/2024/02/29/%E5%AE%9E%E7%8E%B0%E5%90%91%E4%B8%8A%E5%8F%96%E6%95%B4/</url>
    <content><![CDATA[<h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><p> *** a&#x2F;b,向上取整位（a+b-1）&#x2F;b ***</p>
]]></content>
  </entry>
  <entry>
    <title>时间冉冉</title>
    <url>/2024/05/09/%E6%97%B6%E9%97%B4%E5%86%89%E5%86%89/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2024/05/12/%E7%AB%AF%E5%8F%A3%E4%B8%8E%E5%A5%97%E6%8E%A5%E5%AD%97/</url>
    <content><![CDATA[<hr>
<p>title: 端口与套接字<br>date: 2024-05-12 15:57:36<br>updated: 2024-05-12 15:57:36</p>
<hr>
<h1 id="端口与套接字"><a href="#端口与套接字" class="headerlink" title="端口与套接字"></a>端口与套接字</h1><p>1.端口相当于为服务提供连接，套接字是为了将程序与端口连接。<br><img src="/../img/image.png" alt="alt text"> 2.端口号：0-65535，0-1023为系统端口，1024-49151为用户端口，49152-65535为保留端口。<br><img src="/../img/image-1.png" alt="alt text"></p>
]]></content>
  </entry>
  <entry>
    <title>算法竞赛入门经典3-2</title>
    <url>/2023/12/03/%E7%AE%97%E6%B3%95%E7%AB%9E%E8%B5%9B%E5%85%A5%E9%97%A8%E7%BB%8F%E5%85%B83-2/</url>
    <content><![CDATA[<h3 id="算法竞赛入门经典3-2"><a href="#算法竞赛入门经典3-2" class="headerlink" title="算法竞赛入门经典3-2"></a>算法竞赛入门经典3-2</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">2023-12-02 10<span class="function">:35</span> </span><br><span class="line"></span><br><span class="line">/***</span><br><span class="line"> *                    _ooOoo_</span><br><span class="line"> *                   o8888888o</span><br><span class="line"> *                   88<span class="string">&quot; . &quot;</span>88</span><br><span class="line"> *                   <span class="params">(| -_- |)</span></span><br><span class="line"> *                    O\ = <span class="string">/O</span></span><br><span class="line"> *                ____/`<span class="params">---</span>&#x27;\____</span><br><span class="line"> *              .   &#x27; \\| |<span class="string">//</span> `.</span><br><span class="line"> *               / \\||| : |||<span class="string">//</span> \</span><br><span class="line"> *             / _||||| -<span class="function">:-</span> |||||- \</span><br><span class="line"> *               | | \\\ - <span class="string">///</span> | |</span><br><span class="line"> *             | \_| &#x27;&#x27;\<span class="params">---/</span>&#x27;&#x27; | |</span><br><span class="line"> *              \ <span class="string">.-</span>\__ `-` ___/-. /</span><br><span class="line"> *           ___`. .&#x27; <span class="string">/--.--</span>\ `. . __</span><br><span class="line"> *        .<span class="string">&quot;&quot;</span> &#x27;&lt; `<span class="string">.___</span>\_&lt;|&gt;_/___.&#x27; &gt;&#x27;<span class="string">&quot;&quot;</span>.</span><br><span class="line"> *       | | : `- \`.;`\ _ /`;.`/ - ` : | |</span><br><span class="line"> *         \ \ `-. \_ __\ <span class="string">/__</span> _/ <span class="string">.-</span>` / /</span><br><span class="line"> * ======`-<span class="string">.____</span>`-<span class="string">.___</span>\_____/___.-`____.-&#x27;======</span><br><span class="line"> *                    `=<span class="params">---=</span>&#x27;</span><br><span class="line"> *</span><br><span class="line"> * <span class="string">.............................................</span></span><br><span class="line"> *          佛祖保佑             永无BUG</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/***</span><br><span class="line"> * http:<span class="string">//www.flvcd.com/</span></span><br><span class="line"> *  <span class="string">.--</span>,       <span class="string">.--</span>,</span><br><span class="line"> * <span class="params">( (  \.---./  )</span> )</span><br><span class="line"> *  &#x27;<span class="string">.__/o</span>   o\__.&#x27;</span><br><span class="line"> *     &#123;=  ^  =&#125;</span><br><span class="line"> *      &gt;  -  &lt;</span><br><span class="line"> *     /       \</span><br><span class="line"> *    <span class="string">//</span>       \\</span><br><span class="line"> *   <span class="string">//</span>|   .   |\\</span><br><span class="line"> *   <span class="string">&quot;&#x27;\       /&#x27;&quot;</span>_.-~^`&#x27;-.</span><br><span class="line"> *      \  _  <span class="string">/--</span>&#x27;         `</span><br><span class="line"> *    ___)<span class="params">( )</span><span class="params">(___</span></span><br><span class="line"><span class="params"> *   (((__)</span> <span class="params">(__)</span>))    高山仰止,景行行止.虽不能至,心向往之。</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;string.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int a[1005], n, k;</span><br><span class="line"><span class="string">//</span> If this comment is removed the program will blow up</span><br><span class="line"><span class="string">//</span> 如果删了此处注释程序就炸了</span><br><span class="line"></span><br><span class="line">int main<span class="params">()</span> &#123;</span><br><span class="line">	memset<span class="params">(a, 0, sizeof(a)</span>); <span class="string">//</span>将a置0,需包含&lt;string.h&gt;</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">	for <span class="params">(int <span class="attr">i</span> = 1; i &lt;= k; i++)</span> &#123;</span><br><span class="line">		for <span class="params">(int <span class="attr">j</span> = 1; j &lt;= n; j++)</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> <span class="params">(j % <span class="attr">i</span> == 0)</span> &#123;</span><br><span class="line">				a[j] = !a[j];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	int first = 1;</span><br><span class="line">	for <span class="params">(int <span class="attr">i</span> = 1; i &lt;= n; i++)</span></span><br><span class="line">		<span class="keyword">if</span> <span class="params">(a[i])</span> &#123;</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; i;</span><br><span class="line">		&#125;</span><br><span class="line">	cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>12/3随笔</title>
    <url>/2023/12/03/%E7%94%9F%E6%B4%BB%EF%BC%81/</url>
    <content><![CDATA[<ul>
<li><em><strong>1.过去的我已经死亡，而今的我正在奔赴死亡</strong></em></li>
<li>2.起心动念，每一刻都站在死亡之间循环重生<br>-<img src="https://cai6.xyz/file/6abbfd02eb52f284aa1e4.jpg"></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>线性表cpp</title>
    <url>/2023/12/14/%E7%BA%BF%E6%80%A7%E8%A1%A8cpp-1/</url>
    <content><![CDATA[<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*********************************************************************</span></span><br><span class="line"><span class="comment">    程序名:</span></span><br><span class="line"><span class="comment">    版权:</span></span><br><span class="line"><span class="comment">    作者: 蔡6</span></span><br><span class="line"><span class="comment">    日期: 2023-12-14 15:15</span></span><br><span class="line"><span class="comment">    说明: cai6.love</span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ok 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> <span class="keyword">error</span> 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> true 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> false 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> maxsize 20</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> elemtype;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> &#123;</span><br><span class="line">	elemtype date[maxsize];</span><br><span class="line">	<span class="type">int</span> length;</span><br><span class="line">&#125; SqList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Status;<span class="comment">//Status为函数返回状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 初始化顺序线性表 */</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(SqList *L)</span> </span>&#123;</span><br><span class="line">	L-&gt;length = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> ok;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">visit</span><span class="params">(elemtype c)</span> </span>&#123; <span class="comment">//查看数据</span></span><br><span class="line">	cout &lt;&lt; c;</span><br><span class="line">	<span class="keyword">return</span> ok;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">InstEmpty</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (L.length == <span class="number">0</span>)</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">ClearList</span><span class="params">(SqList *L)</span> </span>&#123; <span class="comment">//需要对其进行修改则使用指针，或者引用&amp;</span></span><br><span class="line">	L-&gt;length = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> ok;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">GetElen</span><span class="params">(SqList *L, <span class="type">int</span> i, elemtype *e)</span> </span>&#123; <span class="comment">//获取第i位元素，并将其赋值给e</span></span><br><span class="line">	<span class="keyword">if</span> (L-&gt;length == <span class="number">0</span> || i &lt; <span class="number">1</span> || i &gt; L-&gt;length)</span><br><span class="line">		<span class="keyword">return</span> error;</span><br><span class="line">	*e = L-&gt;date[i - <span class="number">1</span>];</span><br><span class="line">	<span class="keyword">return</span> ok;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status  <span class="title">ListInsert</span><span class="params">(SqList *L, <span class="type">int</span> i, elemtype e)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//对线性表的第i位进行插入e</span></span><br><span class="line">	<span class="keyword">if</span> (L-&gt;length == maxsize )</span><br><span class="line">		<span class="keyword">return</span> error;</span><br><span class="line">	<span class="keyword">if</span> ( i &lt; <span class="number">1</span> || i &gt; L-&gt;length + <span class="number">1</span>)</span><br><span class="line">		<span class="keyword">return</span> error;</span><br><span class="line">	<span class="keyword">if</span> (i &lt;= L-&gt;length) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> k = L-&gt;length - <span class="number">1</span>; k &gt;= i - <span class="number">1</span>; k--)</span><br><span class="line">			L-&gt;date[k + <span class="number">1</span>] = L-&gt;date[k];</span><br><span class="line">	&#125;</span><br><span class="line">	L-&gt;date[i - <span class="number">1</span>] = e;</span><br><span class="line">	L-&gt;length++;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> ok;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">ListDelete</span><span class="params">(SqList *L, <span class="type">int</span> i)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> ( i &lt; <span class="number">1</span> || i &gt; L-&gt;length + <span class="number">1</span>)</span><br><span class="line">		<span class="keyword">return</span> error;</span><br><span class="line">	<span class="keyword">if</span> (i &lt;= L-&gt;length) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> k = L-&gt;length - <span class="number">2</span>; k &gt;= i - <span class="number">1</span>; k--)</span><br><span class="line">			L-&gt;date[k] = L-&gt;date[k + <span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	L-&gt;length--;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> ok;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 初始条件：顺序线性表L已存在。操作结果：返回L中数据元素个数 */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ListLength</span><span class="params">(SqList L)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> L.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Status <span class="title">ListTraverse</span><span class="params">(SqList L)</span> </span>&#123; <span class="comment">//依次输出全部数据</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; L.length; i++) &#123;</span><br><span class="line">		cout &lt;&lt; L.date[i] &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ok;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	Status i;</span><br><span class="line">	SqList L;</span><br><span class="line">	i = <span class="built_in">InitList</span>(&amp;L);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;初始化L后：L.length=%d\n&quot;</span>, L.length);</span><br><span class="line">	<span class="type">int</span> a = <span class="number">2</span>;</span><br><span class="line">	i = <span class="built_in">ListInsert</span>(&amp;L, <span class="number">1</span>, a);</span><br><span class="line">	i = <span class="built_in">ListInsert</span>(&amp;L, <span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">	i = <span class="built_in">ListTraverse</span>(L);</span><br><span class="line">	i = <span class="built_in">ListDelete</span>(&amp;L, <span class="number">2</span>);</span><br><span class="line">	i = <span class="built_in">ListTraverse</span>(L);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>网站新增</title>
    <url>/2024/05/27/%E7%BD%91%E7%AB%99%E6%96%B0%E5%A2%9E/</url>
    <content><![CDATA[<p>新建主题中的评论机制</p>
]]></content>
  </entry>
  <entry>
    <title>英语有感</title>
    <url>/2023/12/21/%E8%8B%B1%E8%AF%AD%E6%9C%89%E6%84%9F/</url>
    <content><![CDATA[<p><em><strong>1.胆识<br>2.投资自己的智慧，向成功者借智慧<br>3.学习英语，必须是按照“听、说、读、写、译”的顺序，就像我们小孩子在会讲话前，肯定是先能听清爸爸妈妈的讲话，才能进行模仿，然后才能讲话。</strong></em></p>
]]></content>
  </entry>
  <entry>
    <title>java动态代理的学习</title>
    <url>/2025/01/19/java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="java动态代理的学习"><a href="#java动态代理的学习" class="headerlink" title="java动态代理的学习"></a>java动态代理的学习</h1><p><img src="/Java%E4%B8%ADreflect%E7%9A%84%E5%AD%A6%E4%B9%A0/1.svg" alt="代理的自我认识" title="代理的自我认识"></p>
<p><img src="/Java%E4%B8%ADreflect%E7%9A%84%E5%AD%A6%E4%B9%A0/71rcS1d5Jf8S05yDfo7-KlIhsAs49g2hsLaMbhnyvUg=.png" alt="接口与实现的关系" title="接口与实现的关系"></p>
<p><strong>代理想知道原来的对象可以实现什么功能，可以通过接口。原来的对象提供出自己的接口就可以了。</strong></p>
<p><img src="/Java%E4%B8%ADreflect%E7%9A%84%E5%AD%A6%E4%B9%A0/WwJg2yTj4N-hT_bIU8g3k4zuMxIZiRyvsi28WcUzrac=.png" alt="代码执行流程" title="代码执行流程"></p>
<p>动态代理可以将与业务无关的内容统一交给代理去实现</p>
<p>动态代理可以将与业务无关的内容统一交给代理去实现</p>
]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
</search>
